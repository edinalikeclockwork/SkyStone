package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import org.firstinspires.ftc.robotcore.external.navigation.DistanceUnit;
import java.lang.annotation.Target;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.util.ElapsedTime;
import com.qualcomm.robotcore.hardware.DcMotor;

import com.qualcomm.robotcore.hardware.DigitalChannel;

import android.graphics.Color;

/**
  *
  * TeleOp for testing mecanum wheels
  *   Gamepad1:  TBD
  *
  *   Gamepad2:  Not currently used
  *
  */

@TeleOp ( name = "Mecanum Test - Paul")

public class TeleOpPaul extends LinearOpMode {

    public DcMotor  lf;  // Left front mecanum drive
    public DcMotor  lr;  // Left rear mecanum drive
    public DcMotor  rf;  // Right front mecanum drive
    public DcMotor  rr;  // Right rear mecanum drive

    private ElapsedTime runtime = new ElapsedTime();
    private ElapsedTime button_x_timer = new ElapsedTime();

    @Override
    public void runOpMode () {
        lf = hardwareMap.get(DcMotor.class, "left_front");
        lr = hardwareMap.get(DcMotor.class, "left_rear");
        rf = hardwareMap.get(DcMotor.class, "right_front");
        rr = hardwareMap.get(DcMotor.class, "right_rear");

        telemetry.addData("Status", "Initialized - All Systems Go!");
        telemetry.update();

        // Wait for game to start (driver presses PLAY)
        waitForStart();
        // run until the end of the match (driver presses STOP)

        double  left = 0;
        double  right = 0;
        double  powerOffset = 1;
        double  directionSwap = -1;
        double  liftPowerInit = 0.40;
        boolean gamePadXState;
        boolean prevGamePadXState = false;
        boolean buttonXPressed = false;

        double liftPower = liftPowerInit;

        while (opModeIsActive() && true) {

            telemetry.addData("Target Power - LF", lf);
            telemetry.addData("Target Power - RF", rf);
            telemetry.addData("Target Power - LR", lr);
            telemetry.addData("Target Power - RR", rr);
            telemetry.update();

        }
    }
}
